
cc perf info
mcs 6 sec 4bld
no mem mgt, stack, etc
gcc 2 sec extecbld, 8 sec 4bld
cla 6.5 sec extecbld, 10 sec 4bld
(70% time spent in malloc, so pools or better alloc likely to help)
gcc 6 sec extecbld, 9 4bld post stack array
cla 7.3 sec extecbld, 12.2 sec 4bld post stack array
cla 7.4 sec extecbld, 12.3 sec 4bld post construct frame novars
cla 9 sec extecbld, 14.3 sec 4bld post construct frame vars (no diff for not thread local...)
  with -O1 4bld is 8 sec, -02 is 6 sec (-O3 also 6)
cla with sweep 4bld 22 
  with -O1 4bld 16
gcc with sweep 4bld 21 
  with -O1 4bld 15
gcc with recycle 4bld 20
  with -O1 4bld 14
cla with recycle 4bld 20
  with -O1 4bld 
gcc without sweep 4bld 14 
  with -O1 4bld 8 -O2 4bld 8
cla with whole 9 yards 4bld 20

simple performance check - run cycle with a stopwatch:

time scripts/cyclejv5.sh
time scripts/cyclemcs5.sh

Times

Dell E6430 Win7 on power jv javac vsoff notaskman
  2015-12-25 - 48.766
  2016-08-30 - 46.791 46.446 post direct int compare 46.181 mutint in arrayiter 44.872 post rm unneeded vint/array/float members
  2016-08-31 - 43.723 post direct int setvalue addvalue skipnew0
  2016-09-26 - 45.382 post more ++=
  2016-12-18 - 56.570 msys bash makejars
Dell E6430 Win7 on power cs mcs vsoff notaskman
  2015-12-25 - 26.264
  2016-08-30 - 26.780 25.213 post direct int compare 24.747 mutint in arrayiter 24.078 post rm unneeded vint/array/float members
  2016-08-31 - 23.705 post direct int setvalue addvalue skipnew0
  2016-09-26 - 22.310 post more ++=
  2016-12-18 - 24.242 msys bash
Dell E6430 Win7 on power cs csc vsoff notaskman
  2015-12-25 - 27.617

Build stuff (typical box, vson)
mcs 4from5
Parse 2.5
Load syn 3.5
Save syn 1.5
All parse emit 10
Just emit 2.5

savings with lib
3.5 vs 2.5 + 2.5 = 5, so 1.5
(/9.5 = 1/5th)
if did custom emit/load would save 1 on use (so 2.5 saved), lose 1 on save 

